#version 460

#extension GL_EXT_ray_tracing : require
#extension GL_EXT_scalar_block_layout : require

#include <MatchTypes>

layout (binding = 3, scalar) buffer Sphere_ { MatchSphere spheres[]; } sphere_;

void main() {
    MatchSphere sphere = sphere_.spheres[gl_PrimitiveID];

    vec3 CO = gl_WorldRayOriginEXT - (gl_ObjectToWorldEXT * vec4(sphere.center, 1)).xyz;
    float a = dot(gl_WorldRayDirectionEXT, gl_WorldRayDirectionEXT);
    float b = 2 * dot(gl_WorldRayDirectionEXT, CO);
    float c = dot(CO, CO) - sphere.radius * sphere.radius;
    float delta = b * b - 4 * a * c;

    if (delta >= 0) {
        reportIntersectionEXT((-b - sqrt(delta)) / (2 * a), 0);
    }
}
